packages:
  <<: !include_dir_named common
#  <<: !include_dir_named bluetooth
  color: !include gui/colors.yaml

substitutions:
  devicename: gm-smalltv-s3
  log_level: WARN

esphome:
  comment: "GeekMagic SmallTV S3"
  name: $devicename
  friendly_name: $devicename
  platformio_options:
    board_build.arduino.memory_type: qio_opi
    board_build.flash_mode: dio
    board_upload.maximum_ram_size: 524288

esp32:
  board: esp32-s3-devkitc-1
  variant: esp32s3
  flash_size: 16MB
  framework:
    type: esp-idf

psram:
  mode: octal
  speed: 80MHz

esp32_touch:
  #setup_mode: True
  measurement_duration: 0.25ms

binary_sensor:
  - platform: esp32_touch
    name: "Touch Sensor"
    id: touch_pad
    pin: GPIO9
    threshold: 120000
##    filters:
##      # Small filter, to debounce the spurious events.
##      - delayed_on: 10ms
##      - delayed_off: 10ms
    on_click:
    - min_length: 10ms
      max_length: 500ms
      # Short touch to cycle through brightnesses
      then:
        - lambda: |-
            int current_brightness = id(back_light).current_values.get_brightness() * 100;
            current_brightness += 18;
            if (current_brightness > 100) {
              current_brightness = 5;
            }
            // Store the brightness value for later use
            id(current_brightness_variable).publish_state(current_brightness);
        - light.turn_on:
            id: back_light
            brightness: !lambda 'return id(current_brightness_variable).state / 100.0;'
        - logger.log: 
            level: info
            format: "Touch ON"
    - min_length: 500ms
      max_length: 2000ms
      then:
        - logger.log: "Long Touch"

spi:
  - id: spihw
    clk_pin: GPIO12
    mosi_pin: GPIO11

output:
  - platform: ledc
    pin: GPIO14
    inverted: true
    id: backlight_output

light:
  - platform: monochromatic
    output: backlight_output
    name: LCD Backlight
    id: back_light
    restore_mode: ALWAYS_ON
    #default_transition_length: 0s

display:
  - platform: ili9xxx
    id: lcd_display
    model: st7789v #gc9a01a
    spi_id: spihw
    #data_rate: 80MHz
    #cs_pin: GPIO1
    dc_pin: GPIO7
    reset_pin: GPIO6
    spi_mode: MODE3
    invert_colors: true
    dimensions:
      width: 240
      height: 240
    update_interval: never
    auto_clear_enabled: false

lvgl:

  log_level: INFO
  color_depth: 16
  bg_color: 0
  border_width: 0
  outline_width: 0
  #shadow_width: 0
  #text_font: unscii_16
  #align: center
  style_definitions:
    - id: font_style
      text_color: 0xFFFFFF
      bg_color: 0
      bg_opa: TRANSP
    - id: details_style
      text_font: MONTSERRAT_16
      text_color: 0xFFFFFF
      bg_color: 0
      bg_opa: TRANSP

  buffer_size: 25%
  widgets:
    - label:
        id: powerverschenkt_label
        text: "?"
        x: 35 
        y: 20
        #width: 100
        #text_align: CENTER
        styles: font_style
        text_font: MONTSERRAT_30 # override font size
        text_color: 0x00ff00

    - label:
        id: netzstrom_label
        text: "?"
        x: 35 
        y: 60
        #width: 100
        #text_align: CENTER
        styles: font_style
        text_font: MONTSERRAT_30 # override font size
        text_color: 0xff0000
 
    - label:
        id: battery_label
        text: "?"
        x: 35
        y: 100
        #width: 100
        text_color: 0xffffff
        #text_align: CENTER
        styles: font_style
        text_font: MONTSERRAT_30 # override font size
        
    - bar:
        id: battery_bar
        x: 120
        y: 120
        width: 90
        height: 6
        min_value: 0
        max_value: 100
        value: 0

    - image:
        src: icon_lightning
        #align: center
        image_recolor: 0x00ff00
        image_recolor_opa: 100% 
        y: 20
        x: 0

    - image:
        src: icon_transmission_tower
        #align: center
        image_recolor: 0xff0000
        image_recolor_opa: 100% #opacity defaults to 0% = must set this for recolor to take effect
        y: 60
        x: 0

    - image:
        src: battery_icon
        #align: center
        image_recolor: 0xffffff
        image_recolor_opa: 100% #opacity defaults to 0% = must set this for recolor to take effect
        y: 100
        x: 0

    - image:
        src: icon_home_assistant
        align: bottom_mid
        image_recolor: 0x838383
        image_recolor_opa: 100% #opacity defaults to 0% = must set this for recolor to take effect
        y: -10
        #x: 0

image:
  - file: mdi:battery-minus-variant
    id: battery_icon_minus
    resize: 35x35
    type: binary
  - file: mdi:battery
    id: battery_icon
    resize: 35x35
    type: binary
  - file: mdi:battery-plus-variant
    id: battery_icon_plus
    resize: 35x35
    type: binary
  - file: mdi:sun-wireless-outline
    id: icon_solar
    resize: 35x35
    type: binary
  - file: mdi:transmission-tower
    id: icon_transmission_tower
    resize: 35x35
    type: binary
  - file: mdi:lightning-bolt-circle
    id: icon_lightning
    resize: 35x35
    type: binary
  - file: mdi:home-assistant
    id: icon_home_assistant
    resize: 35x35
    type: binary

sensor:
  # get raw value from esp32_touch
##  - platform: template
##    name: "Raw touch value"
##    lambda: |-
##        return id(touch_pad).get_value();
##    update_interval: 3s

  # DC Power
  - platform: homeassistant # or your actual sensor platform
    id: total_powerverschenkt
    unit_of_measurement: "Watt"    
    entity_id: sensor.power_export
    on_value:
      - lvgl.label.update:
          id: powerverschenkt_label
          text: !lambda |-
            return ("" + to_string(static_cast<int>(x)) + "W").c_str();

  # Forecast
  - platform: homeassistant # or your actual sensor platform
    id: total_netzstrom
    unit_of_measurement: "Watt" 
    entity_id: sensor.power_import
    on_value:
      - lvgl.label.update:
          id: netzstrom_label
          text: !lambda |-
            return ("" + to_string(static_cast<int>(x)) + "W").c_str();

  # Home Battery
  - platform: homeassistant
    id: battery_kepworth
    entity_id: sensor.batteries_state_of_capacity
    unit_of_measurement: "%"
    on_value:
      - lvgl.label.update:
          id: battery_label
          text: !lambda |-
            return ("" + to_string(static_cast<int>(x)) + "%").c_str();
      - lvgl.bar.update:
          id: battery_bar
          value: !lambda |-
            return x;

  - platform: template
    id: current_brightness_variable
    name: "Current Brightness"
    unit_of_measurement: "%"
    accuracy_decimals: 0
    state_class: "measurement"