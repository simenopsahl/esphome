packages:
  <<: !include_dir_named common
#  <<: !include_dir_named bluetooth
  board: !include board/m5stack_fire.yaml
  grove_i2c: !include board/extension/grove_i2c.yaml
#  alt_uart: !include board/extension/alt_uart.yaml
  grove_uart: !include board/extension/grove_uart.yaml
  air_quality: !include board/module/module_air_quality.yaml
  base_btc: !include board/module/base_btc.yaml
  env_iv: !include board/module/unit_env_iv.yaml
  color: !include gui/colors.yaml

substitutions:
  devicename: m5s-fire-a70780
  location: "2etg, Stue"
  i2c_internal_frequency: 50kHz
  i2c_grove_frequency: 50kHz
#  module_air_quality_uart_bus: uart_alt

esphome:
  comment: "M5Stack Fire @ Stue"
  name: $devicename
  friendly_name: $devicename
  area: $location

esp32:
  framework:
    type: esp-idf

logger:
  initial_level: INFO
  tx_buffer_size: 256

# 320x240 ILI9342C LCD
display:
  - platform: ili9xxx
    id: display_lcd
    model: M5STACK
    cs_pin: $disp_cs_pin
    dc_pin: $disp_dc_pin
    reset_pin: $disp_rs_pin
    data_rate: 20Mhz
    invert_colors: true
    color_palette: 8BIT
    update_interval: 5s
    dimensions:
      height: 240
      width: 320
#      offset_height: 2
#      offset_width: 1
    # Rotate 180deg
#    transform:
#      mirror_x: true
#      mirror_y: true
    pages:
      - id: page_home
        lambda: |-
          // Bottom Nav BG
          it.filled_rectangle( 0, it.get_height()-36, it.get_width(), it.get_height(), id(c_bg_s) );

          // Left Icon
          it.image( ( it.get_width()/4 )-10, it.get_height(), id(i_airq), ImageAlign::BOTTOM_CENTER, id(c_text_s), id(c_bg_s) );
          // Mid Icon
          it.image( it.get_width()/4*2, it.get_height(), id(i_home), ImageAlign::BOTTOM_CENTER, id(c_purple), id(c_bg_s) );
          // Right Icon
          it.image( ( it.get_width()/4*3 )+10, it.get_height(), id(i_power), ImageAlign::BOTTOM_CENTER, id(c_text_s), id(c_bg_s) );

          // Show wifi icon.
          if (id(component_wifi).is_connected()) {
            it.image( 0, it.get_height(), id(i_wifi), ImageAlign::BOTTOM_LEFT, id(c_green), id(c_bg_s) );
          }
          // Show HA icon.
          if (id(component_api).is_connected()) {
            it.image( it.get_width(), it.get_height(), id(i_api), ImageAlign::BOTTOM_RIGHT, Color(0x00daff), id(c_bg_s) );
          }

          // Temperature graph
          it.graph(0, 20, id(graph_temperature_room));

          // Temperature value
          it.image( 0, it.get_height()-48, id(i_temp_l), ImageAlign::BOTTOM_LEFT, id(c_text_s) );
          it.printf( it.get_width()/2, it.get_height()-50, id(f120b), id(c_text_p), TextAlign::BASELINE_CENTER, "%2.0f", id(temperature_feels_like).state );
          it.print( it.get_width(), it.get_height()-50, id(f60), id(c_text_s), TextAlign::BASELINE_RIGHT, "°C" );
          
          // Refresh Timestamp
          // Code by EnsconcE from https://community.home-assistant.io/t/esphome-show-time/348903
          char str[17];
          time_t currTime = id(time_homeassistant).now().timestamp;
          strftime(str, sizeof(str), "%H:%M", localtime(&currTime));
          it.printf(it.get_width()/2, 0, id(f14), id(c_text_s), TextAlign::TOP_CENTER, "%s", str);
      - id: page_airq
        lambda: |-
          // Bottom Nav BG
          it.filled_rectangle( 0, it.get_height()-36, it.get_width(), it.get_height(), id(c_bg_s) );

          // Left Icon
          it.image( ( it.get_width()/4 )-10 , it.get_height(), id(i_airq), ImageAlign::BOTTOM_CENTER, id(c_purple), id(c_bg_s) );
          // Mid Icon
          it.image( it.get_width()/4*2, it.get_height(), id(i_home), ImageAlign::BOTTOM_CENTER, id(c_text_s), id(c_bg_s) );
          // Right Icon
          it.image( ( it.get_width()/4*3 )+10, it.get_height(), id(i_power), ImageAlign::BOTTOM_CENTER, id(c_text_s), id(c_bg_s) );

          // Show wifi icon.
          if (id(component_wifi).is_connected()) {
            it.image( 0, it.get_height(), id(i_wifi), ImageAlign::BOTTOM_LEFT, id(c_green), id(c_bg_s) );
          }
          // Show HA icon.
          if (id(component_api).is_connected()) {
            it.image( it.get_width(), it.get_height(), id(i_api), ImageAlign::BOTTOM_RIGHT, Color(0x00daff), id(c_bg_s) );
          }

          it.image( 0, 36, id(i_temp_s), ImageAlign::TOP_LEFT, id(c_text_s) );
          it.image( 4, 94, id(i_pm1), ImageAlign::TOP_LEFT, id(c_text_s) );
          it.image( 4, 128, id(i_pm25), ImageAlign::TOP_LEFT, id(c_text_s) );
          it.image( 4, 162, id(i_pm10), ImageAlign::TOP_LEFT, id(c_text_s) );
          
          it.print( 38, 94, id(f18), id(c_text_s), TextAlign::TOP_LEFT, "Svevestøv 1.0: " );
          it.print( 38, 128, id(f18), id(c_text_s), TextAlign::TOP_LEFT, "Svevestøv 2.5: " );
          it.print( 38, 162, id(f18), id(c_text_s), TextAlign::TOP_LEFT, "Svevestøv 10.0: " );

          it.printf( it.get_width()/2, 16, id(f60b), id(c_text_p), TextAlign::TOP_CENTER, "%2.0f", id(temperature_local).state );
          it.printf( 275, 90, id(f24b), id(c_text_p), TextAlign::TOP_RIGHT, "%.0f", id(pm1_pmsa003).state );
          it.printf( 275, 124, id(f24b), id(c_text_p), TextAlign::TOP_RIGHT, "%.0f", id(pm_25_pmsa003).state );
          it.printf( 275, 158, id(f24b), id(c_text_p), TextAlign::TOP_RIGHT, "%.0f", id(pm_10_pmsa003).state );
          
          it.print( it.get_width(), 25, id(f24), id(c_text_s), TextAlign::TOP_RIGHT, "°C" );
          it.print( it.get_width(), 92, id(f14), id(c_text_s), TextAlign::TOP_RIGHT, "µg/m³" );
          it.print( it.get_width(), 128, id(f14), id(c_text_s), TextAlign::TOP_RIGHT, "µg/m³" );
          it.print( it.get_width(), 162, id(f14), id(c_text_s), TextAlign::TOP_RIGHT, "µg/m³" );

          // Refresh Timestamp
          // Code by EnsconcE from https://community.home-assistant.io/t/esphome-show-time/348903
          char str[17];
          time_t currTime = id(time_homeassistant).now().timestamp;
          strftime(str, sizeof(str), "%H:%M", localtime(&currTime));
          it.printf(it.get_width()/2, 0, id(f14), id(c_text_s), TextAlign::TOP_CENTER, "%s", str);
      - id: page_power
        lambda: |-
          // Bottom Nav BG
          it.filled_rectangle( 0, it.get_height()-36, it.get_width(), it.get_height(), id(c_bg_s) );

          // Left Icon
          it.image( ( it.get_width()/4 )-10, it.get_height(), id(i_airq), ImageAlign::BOTTOM_CENTER, id(c_text_s), id(c_bg_s) );
          // Mid Icon
          it.image( it.get_width()/4*2, it.get_height(), id(i_home), ImageAlign::BOTTOM_CENTER, id(c_text_s), id(c_bg_s) );
          // Right Icon
          it.image( ( it.get_width()/4*3 )+10, it.get_height(), id(i_power), ImageAlign::BOTTOM_CENTER, id(c_purple), id(c_bg_s) );

          // Show wifi icon.
          if (id(component_wifi).is_connected()) {
            it.image( 0, it.get_height(), id(i_wifi), ImageAlign::BOTTOM_LEFT, id(c_green), id(c_bg_s) );
          }
          // Show HA icon.
          if (id(component_api).is_connected()) {
            it.image( it.get_width(), it.get_height(), id(i_api), ImageAlign::BOTTOM_RIGHT, Color(0x00daff), id(c_bg_s) );
          }

          // NordPool Section
          it.printf (1, 2, id(f14), id(c_text_p), TextAlign::TOP_LEFT, "%s", id(nordpool_time_0).state.c_str() );
          it.printf( it.get_width()/2, 2, id(f14), id(c_text_s), TextAlign::TOP_CENTER, "%s", id(nordpool_time_4).state.c_str() );
          it.printf( it.get_width()-1, 2, id(f14), id(c_text_s), TextAlign::TOP_RIGHT, "%s", id(nordpool_time_8).state.c_str() );
          it.graph( 0, 22, id(graph_nordpool), id(c_bg_s) );
          it.printf( 1, 172, id(f18), id(c_text_p), TextAlign::TOP_LEFT, "%2.0f Øre", id(nordpool_price_0).state );
          it.printf( it.get_width()/2, 172, id(f18), id(c_text_s), TextAlign::TOP_CENTER, "%2.0f Øre", id(nordpool_price_4).state );
          it.printf( it.get_width()-1, 172, id(f18), id(c_text_s), TextAlign::TOP_RIGHT, "%2.0f Øre", id(nordpool_price_8).state );

binary_sensor:
  # Call sensors from HA.
  - platform: homeassistant
    entity_id: binary_sensor.etg2_stue_occupancy
    id: motion_stue
  - platform: homeassistant
    entity_id: binary_sensor.etg2_gang_occupancy
    id: motion_gang
  # Turn on display while room is occupied
  - platform: template
    id: motion_detected
    lambda: !lambda |-
      if ( (id(motion_stue).state) and (id(motion_gang).state) ) {
        return true;
      } else {
        return false;
      }
    on_state: 
      then:
        - script.execute: display_on_off

script:
  - id: display_on_off
    mode: restart
    then:
      - if:
          condition: 
            - binary_sensor.is_on: motion_detected
          then:
            - light.turn_on:
                id: backlight_light
                brightness: 75%
                transition_length: 1s
            - logger.log: "Motion detected. Display on"
          else:
            - if:
                condition: 
                  - binary_sensor.is_off: motion_detected
                then:
                  - delay: 15s
                  - light.turn_on:
                      id: backlight_light
                      brightness: 50%
                      transition_length: 10s
                  - logger.log: "Motion NOT detected. Display 50%"
                  - if:
                      condition: 
                        - binary_sensor.is_off: motion_detected
                      then:
                        - delay: 30s
                        - light.turn_on:
                            id: backlight_light
                            brightness: 25%
                            transition_length: 10s
                        - logger.log: "Motion NOT detected. Display 25%"
                        - if:
                            condition: 
                              - binary_sensor.is_off: motion_detected
                            then:
                              - delay: 45s
                              - light.turn_on:
                                  id: backlight_light
                                  brightness: 10%
                                  transition_length: 10s
                              - logger.log: "Motion NOT detected. Display 10%"
                              - if:
                                  condition: 
                                    - binary_sensor.is_off: motion_detected
                                  then:
                                    - delay: 1min
                                    - light.turn_off: backlight_light
                                    - logger.log: "Motion NOT detected. Display off"

sensor:
  # Combine sensors
  - platform: combination
    type: median
    id: temperature_local
    name: "Temperature"
    device_class: "temperature"
    state_class: "measurement"
    sources:
      # ENV III / Base BTC
      - source: temperature_sht30_base_btc
#      - source: temperature_qmp6988
      # ENV IV
      - source: temperature_bmp280_unit_env
      - source: temperature_sht40_unit_env
      # CO2
#      - source: temperature_scd40_unit_co2
    filters:
      - or:
        - heartbeat: 900s
        - delta: 0.15

  - platform: combination
    type: median
    id: humidity_local
    name: "Humidity"
    device_class: "humidity"
    state_class: "measurement"
    sources:
      # ENV III
      - source: humidity_sht30_base_btc
      # ENV IV
      - source: humidity_sht40_unit_env
      # CO2
#      - source: humidity_scd40_unit_co2
    filters:
      - or:
        - heartbeat: 900s
        - delta: 0.15

  # Call sensors from HA.
  - platform: homeassistant
    entity_id: sensor.etg2_stue_tc_heatindex
    id: temperature_feels_like

  - platform: homeassistant
    entity_id: sensor.waveshare_nordpool_future_offset
    id: nordpool_sensor
  - platform: homeassistant
    entity_id: sensor.waveshare_nordpool_future_offset
    attribute: price0
    id: nordpool_price_0
  - platform: homeassistant
    entity_id: sensor.waveshare_nordpool_future_offset
    attribute: price4
    id: nordpool_price_4
  - platform: homeassistant
    entity_id: sensor.waveshare_nordpool_future_offset
    attribute: price8
    id: nordpool_price_8

# Strings from Home Assistant
text_sensor:
  - platform: homeassistant
    entity_id: sensor.waveshare_nordpool_future_offset
    attribute: time0
    id: nordpool_time_0
  - platform: homeassistant
    entity_id: sensor.waveshare_nordpool_future_offset
    attribute: time4
    id: nordpool_time_4
  - platform: homeassistant
    entity_id: sensor.waveshare_nordpool_future_offset
    attribute: time8
    id: nordpool_time_8

graph:
  - id: graph_nordpool
    duration: 9h
    border: false
    x_grid: 1h
    y_grid: 10.0
    width: 320
    height: 150
    traces:
      - sensor: nordpool_sensor
        line_thickness: 20
        color: c_green
  - id: graph_temperature_room
    duration: 8h
#    x_grid: 15min
#    y_grid: 1.0
    width: 320
    height: 70
    border: false
    traces:
      - sensor: temperature_feels_like
        line_thickness: 10
        color: c_blue
        continuous: true

font:
  - file:
      type: gfonts
      family: Noto Sans Display
      weight: 500
    id: f14
    size: 14
    glyphs: &norwegian-glyphs [ ' ', ',', '.', ':', '%', '°', '@', '?','~',
      '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '-', '/', 'µ', '³',
      'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N',
      'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'Æ', 'Ø', 'Å',
      'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',
      'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'æ', 'ø', 'å']
    extras:
      - file: "gui/fonts/materialdesignicons-webfont.ttf"
        glyphs: [
          "\U000F05A9", # mdi:wifi
          "\U000F07D0", # mdi:home-assistant
          "\U000F0D43", # mdi:air-filter
          "\U000F050F", # mdi:thermometer
          "\U000F07E4", # mdi:molecule-co2
          "\U000F013B" # mdi:chemical-weapon
        ]
  - file:
      type: gfonts
      family: Noto Sans Display
      weight: 500
    id: f18
    size: 18
    glyphs: *norwegian-glyphs
  - file:
      type: gfonts
      family: Noto Sans Display
      weight: 500
    id: f20
    size: 20
    glyphs: *norwegian-glyphs
  - file:
      type: gfonts
      family: Noto Sans Display
      weight: 700
    id: f20b
    size: 20
    glyphs: *norwegian-glyphs
  - file:
      type: gfonts
      family: Noto Sans Display
      weight: 500
    id: f24
    size: 24
    glyphs: *norwegian-glyphs
    extras:
      - file: "gui/fonts/materialdesignicons-webfont.ttf"
        glyphs: [
          "\U000F05A9", # mdi:wifi
          "\U000F07D0" # mdi:home-assistant
        ]
  - file:
      type: gfonts
      family: Noto Sans Display
      weight: 700
    id: f24b
    size: 24
    glyphs: *norwegian-glyphs
  - file:
      type: gfonts
      family: Noto Sans Display
      weight: 500
    id: f32
    size: 32
    glyphs: *norwegian-glyphs
    extras:
      - file: "gui/fonts/materialdesignicons-webfont.ttf"
        glyphs: [
          "\U000F050F", # mdi:thermometer
          "\U000F07E4", # mdi:molecule-co2
          "\U000F013B" # mdi:chemical-weapon
        ]
  - file:
      type: gfonts
      family: Noto Sans Display
      weight: 700
    id: f32b
    size: 32
    glyphs: *norwegian-glyphs
  - file:
      type: gfonts
      family: Noto Sans Display
      weight: 500
    id: f60
    size: 60
    glyphs: *norwegian-glyphs
    extras:
      - file: "gui/fonts/materialdesignicons-webfont.ttf"
        glyphs: [
          "\U000F050F", # mdi:thermometer
          "\U000F02DC", # mdi:home
          "\U000F0D43", # mdi:air-filter
          "\U000F1B5A", # mdi:weather-dust
          "\U000F140B" # mdi:lightning-bolt
        ]
  - file:
      type: gfonts
      family: Noto Sans Display
      weight: 700
    id: f60b
    size: 60
    glyphs: *norwegian-glyphs
  - file:
      type: gfonts
      family: Noto Sans Display
      weight: 700
    id: f120b
    size: 120
    glyphs: *norwegian-glyphs

image:
  - id: i_wifi
    file: mdi:wifi
    type: binary
    resize: 24x24
  - id: i_api
    file: mdi:home-assistant
    type: binary
    resize: 24x24
  - id: i_home
    file: mdi:home
    type: binary
    resize: 36x36
  - id: i_airq
    file: mdi:weather-dust
    type: binary
    resize: 36x36
  - id: i_power
    file: mdi:lightning-bolt
    type: binary
    resize: 36x36
  - id: i_temp_l
    file: mdi:thermometer
    type: binary
    resize: 56x56
  - id: i_temp_s
    file: mdi:thermometer
    type: binary
    resize: 28x28
#  - id: i_co2
#    file: mdi:molecule-co2
#    type: binary
#    resize: 28x28
  - id: i_pm1
    file: mdi:grain
    type: binary
    resize: 28x28
  - id: i_pm25
    file: mdi:chemical-weapon
    type: binary
    resize: 28x28
  - id: i_pm10
    file: mdi:molecule
    type: binary
    resize: 28x28