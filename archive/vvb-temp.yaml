substitutions:
  devicename: vvb-temp

esphome:
  comment: "VVB Temp"
  name: $devicename
  friendly_name: $devicename
  platformio_options:
    board_build.flash_mode: dio
    board_build.f_cpu: 80000000L
  on_boot:
    then:
      - wait_until:
          condition:
            wifi.connected:
      - lambda: >
          id(ble_tracker).set_scan_continuous(true);
          id(ble_tracker).start_scan();

esp32:
  board: esp32-c3-devkitm-1
  variant: ESP32C3
  framework:
    type: esp-idf
    sdkconfig_options:
      CONFIG_BT_BLE_50_FEATURES_SUPPORTED: y
      CONFIG_BT_BLE_42_FEATURES_SUPPORTED: y
      CONFIG_ESP_TASK_WDT_TIMEOUT_S: "10"  

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "eSIWvElZ7L3eQPFRDN8gozP1ERAdbXu729sPX4ai2Ug="

ota:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  output_power: 8.5

i2c:
  scl: GPIO8
  sda: GPIO9
  scan: True
  frequency: 100kHz
  id: i2c_a

dallas:
  - pin: GPIO0
    update_interval: 30s
    id: dallas_a

esp32_ble_tracker:
  id: ble_tracker
  scan_parameters:
    continuous: false
    active: true

bluetooth_proxy:
  active: true

button:
    - platform: restart
      name: "Restart"
      device_class: "restart"

binary_sensor:
  - platform: status
    name: "Status"
    device_class: "connectivity"
    entity_category: "diagnostic"

sensor:
  - platform: bme280_i2c
    temperature:
      id: bme_temperature
      name: "Temperature"
    pressure:
      id: bme_pressure
      name: "Pressure"
    humidity:
      id: bme_humidity
      name: "Humidity"
    address: 0x76
    update_interval: 30s

  - platform: wifi_signal
    name: "WiFi Signal dB"
    update_interval: 60s
    device_class: "signal_strength"
    entity_category: "diagnostic"