---
# https://docs.m5stack.com/en/core/M5NanoC6
# Base functions for:
# M5Stack NanoC6
#

# Pins for this model
packages:
  pins: !include pins/m5stack_nano_c6.yaml

esphome:
  platformio_options:
    board_build.f_cpu: 160000000L
    board_build.f_flash: 80000000L
    board_build.flash_size: 4MB
    build_flags: "-DBOARD_HAS_PSRAM"
    board_build.arduino.memory_type: qio_opi

esp32:
  board: esp32-c6-devkitm-1
  variant: esp32c6
  flash_size: 4MB
  framework:
    sdkconfig_options:
      CONFIG_ESPTOOLPY_FLASHSIZE_4MB: y

# Enable status LED
status_led:
  id: status_light
  pin: $led_pin

switch:
  - platform: gpio
    id: rgb_switch
    pin: $rgb_pwr_pin
    restore_mode: RESTORE_DEFAULT_ON
    name: "RGB on/off"
    entity_category: config

# Configuration of onboard RGB LED
light:
  - platform: esp32_rmt_led_strip
    id: rgb_led
    rgb_order: GRB
    pin: $rgb_pin
    num_leds: 1
    chipset: WS2812
    is_rgbw: true
    effects:
      - pulse:
      - strobe:
      - strobe:
          name: "Slow Blink" # 200ms on, 1500ms off
          colors:
            - state: true
              brightness: 25%
              red: 100%
              green: 0%
              blue: 0%
              duration: 500ms
              transition_length: 500ms
            - state: false
              duration: 2000ms
              transition_length: 1000ms
#      - addressable_flicker:
#      - addressable_rainbow:
#      - addressable_color_wipe:
#      - addressable_scan:
#      - addressable_twinkle:
    default_transition_length: 100ms
    initial_state:
      state: true
      brightness: 50%
      color_brightness: 100%
      red: 100%
      green: 0%
      blue: 0%
    name: "LED"
    entity_category: config

# Button
binary_sensor:
  - platform: gpio
    name: Button
    entity_category: diagnostic
    pin:
      number: $button_pin
      inverted: true
    filters:
      - delayed_off: 10ms
    on_press:
      then:
        - logger.log: Button Pressed
        - script.execute: led_wifi
        - script.wait: led_wifi
        - delay: 1000ms
        - script.execute: led_homeassistant
        - script.wait: led_homeassistant
        - delay: 1000ms
        - script.execute: led_default_state
    on_click:
      min_length: 1000ms
      max_length: 5000ms
      then:
        - logger.log: Button Held
        - light.turn_off:
            id: rgb_led

# Script for status LED
script:
  - id: led_wifi
    then:
      - if:
          condition:
            wifi.connected:
          then:
            - light.turn_on:
                id: rgb_led
                brightness: 30%
                red: 0%
                green: 100%
                blue: 0%
            - delay: 400ms
            - light.turn_off:
                id: rgb_led
            - delay: 200ms
            - light.turn_on:
                id: rgb_led
                brightness: 30%
                red: 0%
                green: 100%
                blue: 0%
            - delay: 400ms
          else:
            - light.turn_off:
                id: rgb_led
  - id: led_homeassistant
    then:
      - if:
          condition:
            api.connected:
          then:
            - light.turn_on:
                id: rgb_led
                brightness: 30%
                red: 0%
                green: 10%
                blue: 100%
            - delay: 400ms
            - light.turn_off:
                id: rgb_led
            - delay: 200ms
            - light.turn_on:
                id: rgb_led
                brightness: 30%
                red: 0%
                green: 10%
                blue: 100%
            - delay: 400ms
          else:
            - light.turn_off:
                id: rgb_led
  - id: led_default_state
    then:
      - light.turn_on:
          id: rgb_led
          brightness: 25%
          red: 100%
          green: 0%
          blue: 0%
      - delay: 200ms
      - light.turn_on:
          id: rgb_led
          effect: "Slow Blink"
