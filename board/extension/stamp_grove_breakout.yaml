---
# https://docs.m5stack.com/en/accessory/StampS3%20GroveBreakOut
# m5stack Stamp-S3 GroveBreakOut

# Pins for Stamp-S3
packages:
  pins: !include ../pins/m5stack_stamp_s3.yaml

i2c:
  # Grove 1
  - id: ic2_grove_1
    sda: ${pin.ext.gpio.p2}
    scl: ${pin.ext.gpio.p1}
    scan: true
  # Grove 2
  - id: ic2_grove_2
    sda: ${pin.ext.gpio.p3}
    scl: ${pin.ext.gpio.p4}
    scan: true
  # Grove 3
  - id: ic2_grove_3
    sda: ${pin.ext.gpio.p5}
    scl: ${pin.ext.gpio.p6}
    scan: true
  # Grove 4
  - id: ic2_grove_4
    sda: ${pin.ext.gpio.p11}
    scl: ${pin.ext.gpio.p10}
    scan: true
  # Grove 5
  - id: ic2_grove_5
    sda: ${pin.ext.gpio.p7}
    scl: ${pin.ext.gpio.p9}
    scan: true
  # Grove 6
  - id: ic2_grove_6
    sda: ${pin.ext.gpio.p13}
    scl: ${pin.ext.gpio.p15}
    scan: true

sensor:
  # Battery voltage
  - platform: adc
    pin: ${pin.ext.gpio.p8}
    id: bat_adc
    update_interval: 2s
    samples: 10
    accuracy_decimals: 3
    filters:
#      - multiply: 4.25
      - median:
          window_size: 7
          send_every: 7
          send_first_at: 7
    name: "Battery Voltage"
    entity_category: diagnostic
    device_class: voltage
    unit_of_measurement: V
#    on_value:
#      then:
#        - component.update: bat_percent
  # Battery Percent
  # - platform: template
  #   name: "Battery"
  #   id: bat_percent
  #   lambda: return id(bat_adc).state;
  #   accuracy_decimals: 0
  #   filters:
  #     - calibrate_linear:
  #         method: exact
  #         datapoints:
  #           - 0.00 -> 0.0
  #           - 3.00 -> 1.0
  #           - 3.10 -> 10.0
  #           - 3.20 -> 50.0
  #           - 3.55 -> 85.0
  #           - 3.685 -> 100.0
  #     - lambda: |-
  #         if (x <= 100) {
  #           return x;
  #         } else {
  #           return 100;
  #         }
  #         if (x <0) {
  #           return 0;
  #         }
  #   entity_category: diagnostic
  #   device_class: battery
  #   unit_of_measurement: "%"