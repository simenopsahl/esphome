---
# https://docs.m5stack.com/en/core/AtomS3U
# Base functions for:
# M5Stack AtomS3U
#

# Pins for this model
packages:
  pins: !include pins/m5stack_atom_s3u.yaml

esphome:
  project:
    name: "M5Stack.Atom S3U"

esp32:
  board: m5stack-atoms3
  variant: esp32s3
  flash_size: 8MB

# Output that blinks the LED
#output:
#  - platform: template
#    id: status_output
#    type: binary
#    write_action:
#    - if:
#        condition:
#          lambda: return (state);
#        then:
#          - light.turn_on:
#              id: rgb_led
#              transition_length: 0ms
#              brightness: 30%
#              red: 100%
#              green: 0%
#              blue: 0%
#        else:
#          - light.turn_off:
#              id: rgb_led
#              transition_length: 0ms

# IR
#remote_transmitter:
#  pin: $ir_pin
#  carrier_duty_percent: 50%
#  rmt_symbols: 144

light:
  # Enable status LED
#  - platform: status_led
#    id: status_light
#    output: status_output

  #G35=RGB WS2812C-2020
  - platform: esp32_rmt_led_strip
    id: rgb_led
    rgb_order: GRB
    pin: $rgb_pin
    num_leds: 1
    # RMT 0 channels will be occupied by IR
#    rmt_channel: 1
    rmt_symbols: 384
    chipset: ws2812
    effects:
      - pulse:
      - strobe:
      - strobe:
          name: "Slow Blink" # 200ms on, 1500ms off
          colors:
            - state: true
              brightness: 25%
              red: 100%
              green: 0%
              blue: 0%
              duration: 500ms
              transition_length: 500ms
            - state: false
              duration: 2000ms
              transition_length: 1000ms
#      - addressable_flicker:
#      - addressable_rainbow:
#      - addressable_color_wipe:
#      - addressable_scan:
#      - addressable_twinkle:
    default_transition_length: 100ms
    initial_state:
      state: true
      brightness: 50%
      color_brightness: 100%
      red: 100%
      green: 0%
      blue: 0%
    name: "LED"
    entity_category: config
#  - platform: partition
#    id: led1
#    segments: 
#      id: rgb_led
#      from: 0
#      to: 1
#  - platform: partition
#    id: led2
#    segments: 
#      id: rgb_led
#      from: 1
#      to: 1
#  - platform: partition
#    id: led3
#    segments: 
#      id: rgb_led
#      from: 2
#      to: 2
#  - platform: partition
#    id: led4
#    segments: 
#      id: rgb_led
#      from: 2
#      to: 3

#G41=Button
binary_sensor:
  - platform: gpio
    name: Button
    entity_category: diagnostic
    pin:
      number: $button_pin
      inverted: true
      mode:
        input: true
        pullup: true
    filters:
      - delayed_off: 10ms
    on_press:
      - logger.log: Button Pressed
      - script.execute: led_wifi
      - script.wait: led_wifi
      - delay: 1000ms
      - script.execute: led_homeassistant
      - script.wait: led_homeassistant
      - delay: 1000ms
      - script.execute: led_default_state
    on_click:
      min_length: 1000ms
      max_length: 5000ms
      then:
        - logger.log: Button Held
        - light.turn_off:
            id: rgb_led

# Script for status LED
script:
  - id: led_wifi
    then:
      - if:
          condition:
            wifi.connected:
          then:
            - light.turn_on:
                id: rgb_led
                brightness: 30%
                red: 0%
                green: 100%
                blue: 0%
            - delay: 400ms
            - light.turn_off:
                id: rgb_led
            - delay: 200ms
            - light.turn_on:
                id: rgb_led
                brightness: 30%
                red: 0%
                green: 100%
                blue: 0%
            - delay: 400ms
          else:
            - light.turn_off:
                id: rgb_led
  - id: led_homeassistant
    then:
      - if:
          condition:
            api.connected:
          then:
            - light.turn_on:
                id: rgb_led
                brightness: 30%
                red: 0%
                green: 10%
                blue: 100%
            - delay: 400ms
            - light.turn_off:
                id: rgb_led
            - delay: 200ms
            - light.turn_on:
                id: rgb_led
                brightness: 30%
                red: 0%
                green: 10%
                blue: 100%
            - delay: 400ms
          else:
            - light.turn_off:
                id: rgb_led
  - id: led_default_state
    then:
      - light.turn_on:
          id: rgb_led
          brightness: 25%
          red: 100%
          green: 0%
          blue: 0%
      - delay: 200ms
      - light.turn_on:
          id: rgb_led
          effect: "Slow Blink"
