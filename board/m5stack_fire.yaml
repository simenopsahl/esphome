---
# https://docs.m5stack.com/en/core/fire_v2.7
# Base functions for:
# M5Stack Fire
#

# Pins for this model
packages:
  pins: !include pins/m5stack_fire.yaml

substitutions:
  device:
    framework:
      type: esp-idf

esphome:
  project:
    name: "M5Stack.Fire"
    version: "2.7"
  platformio_options:
    build_flags:
      - "-DARDUINO_M5STACK_FIRE"
      - "-DBOARD_HAS_PSRAM"
      - "-DARDUINO_USB_CDC_ON_BOOT=1"
      - "-mfix-esp32-psram-cache-issue"
      - "-mfix-esp32-psram-cache-strategy=memw"

# PSRAM is shared with UART bus tx17/rx16
psram:
  mode: quad
  speed: 80MHz

esp32:
  board: m5stack-grey
  flash_size: 16MB
  framework:
    type: ${device.framework.type}
    advanced:
      compiler_optimization: PERF

wifi:
  enable_btm: true
  enable_rrm: true

#external_components:
#  - source:
#      type: git
#      url: https://github.com/ssieb/custom_components
#    components: [ip5306]

#ip5306:
#  battery_level:
#    id: ip5306_battery_level
#    name: Battery Level
#  charger_connected:
#    id: ip5306_charger_connected
#  charge_full:
#    id: ip5306_charge_full

spi:
  clk_pin: ${pin.int.spi.clk}
  mosi_pin: ${pin.int.spi.mosi}
#  miso_pin: ${pin.int.spi.miso}

# IR
#remote_transmitter:
#  pin: ${ir_pin}
#  carrier_duty_percent: 50%
#  rmt_symbols: 144

# 320x240 ILI9342C LCD
display:
  - platform: ili9xxx
    id: display_lcd
    model: M5STACK
    cs_pin: ${pin.int.spi.disp.cs}
    dc_pin: ${pin.int.spi.disp.dc}
    reset_pin: ${pin.int.spi.disp.reset}
    data_rate: 20Mhz
    invert_colors: true
    color_palette: 8BIT
    update_interval: 5s
    dimensions:
      height: 240
      width: 320
#      offset_height: 2
#      offset_width: 1
    # Rotate 180deg
#    transform:
#      mirror_x: true
#      mirror_y: true

output:
  # backlight output
  - platform: ledc
    id: backlight_output
    pin: ${pin.light.disp_bl}
  # Buzzer
  - platform: ledc
    id: buzzer
    pin: ${pin.audio.buzzer}

light:
  - platform: monochromatic # backlight
    id: backlight_light
    output: backlight_output
    default_transition_length: 100ms
    restore_mode: RESTORE_AND_ON
    initial_state:
      state: on
      brightness: 25%
    name: "Backlight"
    entity_category: config

# Speaker (only got buzzer to work)
#i2s_audio:
#  i2s_lrclk_pin: ${pin.int.audio.i2s_lrclk}

#media_player:
#  - platform: i2s_audio
#    id: media_player_out
#    dac_type: internal
#    mode: stereo
#    name: "Internal Media Player"

# Buttons
binary_sensor:
  # Button A
  - platform: gpio
    id: btn_a
    name: "Button A"
    entity_category: diagnostic
    pin:
      number: ${pin.btn.a}
      inverted: true
    filters:
      - delayed_off: 10ms
    on_press:
      - logger.log: Button A Pressed
      - script.execute: buzzer_beep
    on_release:
      - output.turn_off: buzzer
  # Button B
  - platform: gpio
    id: btn_b
    name: "Button B"
    entity_category: diagnostic
    pin:
      number: ${pin.btn.b}
      inverted: true
    filters:
      - delayed_off: 10ms
    on_press:
      - logger.log: Button B Pressed
      - script.execute: buzzer_beep
    on_release:
      - output.turn_off: buzzer
  # Button C
  - platform: gpio
    id: btn_c
    name: "Button C"
    entity_category: diagnostic
    pin:
      number: ${pin.btn.c}
      inverted: true
    filters:
      - delayed_off: 10ms
    on_press:
      - logger.log: Button C Pressed
      - script.execute: buzzer_beep
    on_release:
      - output.turn_off: buzzer

#sensor:
  # Built-in 6-axis (IMU) that also includes a temperature sensor
#  - platform: mpu6886
#    i2c_id: i2c_internal
#    address: 0x68
#    update_interval: 10s
#    accel_x:
#      id: mpu6886_accel_x
#      name: "Accel X"
#      disabled_by_default: true
#    accel_y:
#      id: mpu6886_accel_y
#      name: "Accel Y"
#      disabled_by_default: true
#    accel_z:
#      id: mpu6886_accel_z
#      name: "Accel Z"
#      disabled_by_default: true
#    gyro_x:
#      id: mpu6886_gyro_x
#      name: "Gyro X"
#      disabled_by_default: true
#    gyro_y:
#      id: mpu6886_gyro_y
#      name: "Gyro Y"
#      disabled_by_default: true
#    gyro_z:
#      id: mpu6886_gyro_z
#      name: "Gyro Z"
#      disabled_by_default: true
#    temperature:
#      id: temperature_mpu6886
#      name: "Temperature MPU6886"
#      disabled_by_default: true

# Script for buzzer beep
script:
  - id: buzzer_on
    then:
      - output.turn_on: buzzer
      - output.ledc.set_frequency:
          id: buzzer
          frequency: "500Hz"
      - output.set_level:
          id: buzzer
          level: "1%"
  - id: buzzer_beep
    then:
      - output.turn_on: buzzer
      - output.ledc.set_frequency:
          id: buzzer
          frequency: "500Hz"
      - output.set_level:
          id: buzzer
          level: "1%"
      - delay: 50ms
      - output.turn_off: buzzer