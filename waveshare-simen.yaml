external_components:
  - source: github://pr#6209
    components: [ waveshare_epaper ]

packages:
  # --- COMMON PACKAGES ---
  <<: !include_dir_named common

  # --- BOARD AND MODULES ---
  board: !include board/waveshare_epaper_driver.yaml

substitutions:
  devicename: waveshare-simen
  location: "2etg, Simen"

#external_components:
#  - source: github://pr#6209
#    components: [ waveshare_epaper ]

esphome:
  comment: "E-Ink Simen Display"
  name: ${devicename}
  friendly_name: ${devicename}
  area: ${location}
  project:
    version: "1.0"

# Now render everything on the ePaper screen.
display:
  - id: !extend display_eink
    model: 4.20in-v2
    rotation: 270°
    pages:
      - id: page_content
        lambda: |-
          // Map weather states to MDI characters.
          std::map<std::string, std::string> weather_icon_map
            {
              {"clear-night", "\U000F0594"},
              {"cloudy", "\U000F0590"},
              {"cloudy-alert", "\U000F0F2F"},
              {"cloudy-arrow-right", "\U000F0E6E"},
              {"fog", "\U000F0591"},
              {"hail", "\U000F0592"},
              {"hazy", "\U000F0F30"},
              {"hurricane", "\U000F0898"},
              {"lightning", "\U000F0593"},
              {"lightning-rainy", "\U000F067E"},
              {"night", "\U000F0594"},
              {"night-partly-cloudy", "\U000F0F31"},
              {"partlycloudy", "\U000F0595"},
              {"partly-lightning", "\U000F0F32"},
              {"partly-rainy", "\U000F0F33"},
              {"partly-snowy", "\U000F0F34"},
              {"partly-snowy-rainy", "\U000F0F35"},
              {"pouring", "\U000F0596"},
              {"rainy", "\U000F0597"},
              {"snowy", "\U000F0598"},
              {"snowy-heavy", "\U000F0F36"},
              {"snowy-rainy", "\U000F067F"},
              {"sunny", "\U000F0599"},
              {"sunny-alert", "\U000F0F37"},
              {"sunny-off", "\U000F14E4"},
              {"sunset", "\U000F059A"},
              {"sunset-down", "\U000F059B"},
              {"sunset-up", "\U000F059C"},
              {"tornado", "\U000F0F38"},
              {"windy", "\U000F059D"},
              {"windy-variant", "\U000F059E"},
            };
          
          // Fill background.
          it.fill(COLOR_OFF);

          // Show loading screen before data is received.
          if (id(initial_data_received) == false) {
            it.printf(150, 190, id(font_medium), COLOR_ON, TextAlign::TOP_CENTER, "Venter på data...");
          } else {

            // Weather Condition
            if (id(weather_condition_now).state == id(weather_condition_next).state) {
              it.printf(150, 1, id(font_mdi), COLOR_ON, TextAlign::TOP_CENTER, "%s", weather_icon_map[id(weather_condition_now).state.c_str()].c_str());
            } else {
              it.printf(90, 1, id(font_mdi), COLOR_ON, TextAlign::TOP_CENTER, "%s", weather_icon_map[id(weather_condition_now).state.c_str()].c_str());
              it.printf(150, 25, id(font_medium), COLOR_ON, TextAlign::TOP_CENTER, "->");
              it.printf(210, 1, id(font_mdi), COLOR_ON, TextAlign::TOP_CENTER, "%s", weather_icon_map[id(weather_condition_next).state.c_str()].c_str());
            }
            
            // Ute Temperature
            it.graph(0, 72, id(graph_ute), COLOR_ON);
            it.printf(181, 74, id(font_medium), COLOR_ON, TextAlign::TOP_LEFT, "Ute");
            it.printf(180, 104, id(font_large), COLOR_ON, TextAlign::TOP_LEFT, "%2.0f", id(temperature_ute).state);
            it.printf(299, 136, id(font_medium), COLOR_ON, TextAlign::TOP_RIGHT, "°C");

            // Foran Temperature
            it.graph(0, 177, id(graph_simen), COLOR_ON);
            it.printf(181, 179, id(font_medium), COLOR_ON, TextAlign::TOP_LEFT, "Inne");
            it.printf(180, 209, id(font_large), COLOR_ON, TextAlign::TOP_LEFT, "%2.0f", id(temperature_simen).state);
            it.printf(299, 241, id(font_medium), COLOR_ON, TextAlign::TOP_RIGHT, "°C");

            // Bak Temperature
            it.graph(0, 282, id(graph_simen_alt), COLOR_ON);
            it.printf(181, 284, id(font_medium), COLOR_ON, TextAlign::TOP_LEFT, "Inne");
            it.printf(180, 314, id(font_large), COLOR_ON, TextAlign::TOP_LEFT, "%2.0f", id(temperature_simen_alt).state);
            it.printf(299, 346, id(font_medium), COLOR_ON, TextAlign::TOP_RIGHT, "°C");

            // Refresh Timestamp
            // Code by EnsconcE from https://community.home-assistant.io/t/esphome-show-time/348903
            char str[17];
            time_t currTime = id(time_homeassistant).now().timestamp;
            strftime(str, sizeof(str), "%H:%M", localtime(&currTime));
            it.printf(150, 379, id(font_small), COLOR_ON, TextAlign::TOP_CENTER, "Oppdatert kl %s", str);
          }



# Include custom fonts
font:
  - id: font_small
    #file: 'fonts/segoeui.ttf'
    file: 'gui/fonts/GothamRnd-Bold.ttf'
    size: 20
    glyphs: &norwegian-glyphs [ ' ', '<', '>', ',', '-', '.', ':', '%', '°', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'Æ', 'Ø', 'Å', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'æ', 'ø', 'å']
  - id: font_medium
    #file: 'fonts/segoeuib.ttf'
    file: 'gui/fonts/GothamRnd-Bold.ttf'
    size: 32
    glyphs: *norwegian-glyphs
  - id: font_large
    #file: 'fonts/seguisb.ttf'
    file: 'gui/fonts/GothamRnd-Bold.ttf'
    size: 64
    glyphs: *norwegian-glyphs
  # Include Material Design Icons font
  # Thanks to https://community.home-assistant.io/t/display-materialdesign-icons-on-esphome-attached-to-screen/199790/16
  - file: 'gui/fonts/materialdesignicons-webfont.ttf'
    id: font_mdi
    size: 70
    glyphs: &mdi-weather-glyphs
      - "\U000F0590" # mdi-weather-cloudy
      - "\U000F0F2F" # mdi-weather-cloudy-alert
      - "\U000F0E6E" # mdi-weather-cloudy-arrow-right
      - "\U000F0591" # mdi-weather-fog
      - "\U000F0592" # mdi-weather-hail
      - "\U000F0F30" # mdi-weather-hazy
      - "\U000F0898" # mdi-weather-hurricane
      - "\U000F0593" # mdi-weather-lightning
      - "\U000F067E" # mdi-weather-lightning-rainy
      - "\U000F0594" # mdi-weather-night
      - "\U000F0F31" # mdi-weather-night-partly-cloudy
      - "\U000F0595" # mdi-weather-partly-cloudy
      - "\U000F0F32" # mdi-weather-partly-lightning
      - "\U000F0F33" # mdi-weather-partly-rainy
      - "\U000F0F34" # mdi-weather-partly-snowy
      - "\U000F0F35" # mdi-weather-partly-snowy-rainy
      - "\U000F0596" # mdi-weather-pouring
      - "\U000F0597" # mdi-weather-rainy
      - "\U000F0598" # mdi-weather-snowy
      - "\U000F0F36" # mdi-weather-snowy-heavy
      - "\U000F067F" # mdi-weather-snowy-rainy
      - "\U000F0599" # mdi-weather-sunny
      - "\U000F0F37" # mdi-weather-sunny-alert
      - "\U000F14E4" # mdi-weather-sunny-off
      - "\U000F059A" # mdi-weather-sunset
      - "\U000F059B" # mdi-weather-sunset-down
      - "\U000F059C" # mdi-weather-sunset-up
      - "\U000F0F38" # mdi-weather-tornado
      - "\U000F059D" # mdi-weather-windy
      - "\U000F059E" # mdi-weather-windy-variant

# Check if person is home
binary_sensor:
  - platform: homeassistant
    entity_id: binary_sensor.etg2_occupancy
    id: motion_detected

sensor:
  # Call sensors from HA.
  - platform: homeassistant
    entity_id: sensor.waveshare_display_data
    attribute: measured_temp
    id: temperature_ute
    on_value:
      then:
        - lambda: 'id(data_updated) = true;'
  - platform: homeassistant
    entity_id: sensor.waveshare_display_data
    attribute: temp_simen
    id: temperature_simen
    on_value:
      then:
        - lambda: 'id(data_updated) = true;'
  - platform: homeassistant
    entity_id: sensor.etg2_simen_temperature
    id: temperature_simen_alt
    on_value:
      then:
        - lambda: 'id(data_updated) = true;'

# Strings from Home Assistant
text_sensor:
  - platform: homeassistant
    entity_id: sensor.waveshare_display_data
    attribute: weather_condition_now
    id: weather_condition_now
    on_value:
      then:
        - lambda: 'id(data_updated) = true;'
  - platform: homeassistant
    entity_id: sensor.waveshare_display_data
    attribute: weather_condition_0
    id: weather_condition_next
    on_value:
      then:
        - lambda: 'id(data_updated) = true;'

graph:
  - id: graph_ute
    duration: 12h
#    x_grid: 15min
#    y_grid: 1.0
    width: 180
    height: 96
    border: false
    traces:
      - sensor: temperature_ute
        line_thickness: 6
        continuous: true
  - id: graph_simen
    duration: 12h
#    x_grid: 15min
#    y_grid: 1.0
    width: 180
    height: 96
    border: false
    traces:
      - sensor: temperature_simen
        line_thickness: 6
        continuous: true
  - id: graph_simen_alt
    duration: 12h
#    x_grid: 15min
#    y_grid: 1.0
    width: 180
    height: 96
    border: false
    traces:
      - sensor: temperature_simen_alt
        line_thickness: 6
        continuous: true
