packages:
  <<: !include_dir_named common
  <<: !include_dir_named bluetooth
  board: !include board/m5stack_atom_s3.yaml
  extension: !include board/extension/port_abc_i2c.yaml
  env: !include board/module/unit_env_iv.yaml
  pir: !include board/module/unit_pir.yaml
  color: !include gui/colors.yaml

substitutions:
  devicename: m5s-as3-b5c828
  location: "2etg, Bod"
  log_level: WARN
  pir_in_pin: $in_port_abc_pin
  env_i2c_bus: i2c_port_abc
  gyro_i2c_bus: i2c_port_abc

esphome:
  comment: "M5Stack Atom S3 @ Bod"
  name: $devicename
  friendly_name: $devicename
  area: $location
  project:
    version: "1.0.0"

esp32:
  framework:
    type: esp-idf

wifi:
  enable_btm: true
  enable_rrm: true

display:
  - platform: ili9xxx
    model: st7789v
    id: display_lcd
    cs_pin: $disp_cs_pin
    dc_pin: $disp_dc_pin
    reset_pin: $disp_reset_pin
    data_rate: 40Mhz
    invert_colors: true
    update_interval: 5s
    dimensions:
      height: 128
      width: 128
      offset_height: 1
      offset_width: 2
    # Rotate 180deg
    transform:
      mirror_x: true
      mirror_y: true
    pages:
      - id: page_local
        lambda: |-
          // Frame
          //it.rectangle(0,  0, it.get_width(), it.get_height(), id(c_yellow));

          it.print(0, 0, id(f20b), id(c_text_p), TextAlign::TOP_LEFT, "Enhet");
          it.print(it.get_width(), 0, id(f24b), id(c_text_s), TextAlign::TOP_RIGHT, "°C");
          
          it.printf(it.get_width()/2, it.get_height()/2, id(f60b), id(c_text_p), TextAlign::CENTER, "%2.0f", id(temperature_local).state);

          // Show wifi icon.
          if (id(component_wifi).is_connected()) {
            it.image(0, it.get_height(), id(i_wifi), ImageAlign::BOTTOM_LEFT, id(c_green), COLOR_OFF);
          }
          // Show HA icon.
          if (id(component_api).is_connected()) {
            it.image(it.get_width(), it.get_height(), id(i_api), ImageAlign::BOTTOM_RIGHT, Color(0x00daff), COLOR_OFF);
          }

          it.strftime(it.get_width()/2, it.get_height(), id(f18), id(c_text_p), TextAlign::BOTTOM_CENTER, "%H:%M", id(time_homeassistant).now());
      - id: page_room
        lambda: |-
          // Frame
          //it.rectangle(0,  0, it.get_width(), it.get_height(), id(c_yellow));

          it.print(0, 0, id(f20b), id(c_text_p), TextAlign::TOP_LEFT, "Rom");
          it.print(it.get_width(), 0, id(f24b), id(c_text_s), TextAlign::TOP_RIGHT, "°C");
          
          it.printf(it.get_width()/2, it.get_height()/2, id(f60b), id(c_text_p), TextAlign::CENTER, "%2.0f", id(temperature_feels_like).state);

          // Fridge.
          it.image(0, it.get_height()-32, id(i_fridge), ImageAlign::BOTTOM_LEFT, id(c_bg_s), COLOR_OFF);
          it.printf(0, it.get_height()-50, id(f14), id(c_text_p), TextAlign::BOTTOM_LEFT, "%2.0f", id(temperature_fridge).state);

          // Freezer.
          it.image(it.get_width(), it.get_height()-32, id(i_freezer), ImageAlign::BOTTOM_RIGHT, Color(c_bg_s), COLOR_OFF);
          it.printf(it.get_width(), it.get_height()-50, id(f14), id(c_text_p), TextAlign::BOTTOM_RIGHT, "%2.0f", id(temperature_freezer).state);

          // Show wifi icon.
          if (id(component_wifi).is_connected()) {
            it.image(0, it.get_height(), id(i_wifi), ImageAlign::BOTTOM_LEFT, id(c_green), COLOR_OFF);
          }
          // Show HA icon.
          if (id(component_api).is_connected()) {
            it.image(it.get_width(), it.get_height(), id(i_api), ImageAlign::BOTTOM_RIGHT, Color(0x00daff), COLOR_OFF);
          }

          it.strftime(it.get_width()/2, it.get_height(), id(f18), id(c_text_p), TextAlign::BOTTOM_CENTER, "%H:%M", id(time_homeassistant).now());

binary_sensor:
  # Turn on display while room is occupied
  - platform: homeassistant
    entity_id: binary_sensor.etg2_bod_occupancy
    id: motion_detected
    on_state: 
      then:
        - script.execute: display_on_off

script:
  - id: display_on_off
    mode: restart
    then:
      - if:
          condition: 
            - binary_sensor.is_on: motion_detected
          then:
            - light.turn_on:
                id: backlight_light
                brightness: 75%
                transition_length: 1s
            - logger.log: "Motion detected. Display on"
          else:
            - if:
                condition: 
                  - binary_sensor.is_off: motion_detected
                then:
                  - delay: 15s
                  - light.turn_on:
                      id: backlight_light
                      brightness: 50%
                      transition_length: 10s
                  - logger.log: "Motion NOT detected. Display 50%"
                  - if:
                      condition: 
                        - binary_sensor.is_off: motion_detected
                      then:
                        - delay: 30s
                        - light.turn_on:
                            id: backlight_light
                            brightness: 25%
                            transition_length: 10s
                        - logger.log: "Motion NOT detected. Display 25%"
                        - if:
                            condition: 
                              - binary_sensor.is_off: motion_detected
                            then:
                              - delay: 45s
                              - light.turn_on:
                                  id: backlight_light
                                  brightness: 1%
                                  transition_length: 10s
                              - logger.log: "Motion NOT detected. Display 1%"
                              - if:
                                  condition: 
                                    - binary_sensor.is_off: motion_detected
                                  then:
                                    - delay: 1min
                                    - light.turn_off: backlight_light
                                    - logger.log: "Motion NOT detected. Display off"

sensor:
  # Call sensors from HA.
  - platform: homeassistant
    entity_id: sensor.etg2_bod_temperature
    id: temperature_homeassistant
  - platform: homeassistant
    entity_id: sensor.etg2_bod_tc_heatindex
    id: temperature_feels_like

  - platform: homeassistant
    entity_id: sensor.etg2_bod_kjoleskap_temp_temperature
    id: temperature_fridge
  - platform: homeassistant
    entity_id: sensor.etg2_bod_fryser_temp_temperature
    id: temperature_freezer

  # Combine sensors
  - platform: combination
    type: median
    id: temperature_local
    name: "Temperature"
    device_class: "temperature"
    state_class: "measurement"
    sources:
      # ENV III
#      - source: temperature_sht30_hat_env
#      - source: temperature_qmp6988_hat_env
      # ENV IV
      - source: temperature_bmp280_unit_env
      - source: temperature_sht40_unit_env
      # CO2
#      - source: temperature_scd40
      # Gyro
#      - source: temperature_mpu6886
    filters:
      - or:
        - heartbeat: 900s
        - delta: 0.15

  - platform: combination
    type: median
    id: humidity_local
    name: "Humidity"
    device_class: "humidity"
    state_class: "measurement"
    sources:
      # ENV III
#      - source: humidity_sht30_hat_env
      # ENV IV
      - source: humidity_sht40_unit_env
      # ENV Pro
#      - source: humidity_bme688
      # CO2
#      - source: humidity_scd40_unit_co2
    filters:
      - or:
        - heartbeat: 900s
        - delta: 0.15

  - platform: combination
    type: median
    id: pressure_local
    name: "Pressure"
    device_class: "atmospheric_pressure"
    state_class: "measurement"
    sources:
      # ENV III
#      - source: pressure_qmp6988_hat_env
      # ENV IV
      - source: pressure_bmp280_unit_env
      # ENV Pro
#      - source: pressure_bme688
    filters:
      - or:
        - heartbeat: 900s
        - delta: 0.15

font:
  - file:
      type: gfonts
      family: Noto Sans Display
      weight: 500
    id: f14
    size: 14
    glyphs: &norwegian-glyphs [ ' ', ',', '.', ':', '%', '°', '@', '?','~',
      '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '-', '/',
      'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N',
      'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'Æ', 'Ø', 'Å',
      'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',
      'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'æ', 'ø', 'å']
  - file:
      type: gfonts
      family: Noto Sans Display
      weight: 500
    id: f18
    size: 18
    glyphs: *norwegian-glyphs
  - file:
      type: gfonts
      family: Noto Sans Display
      weight: 500
    id: f20
    size: 20
    glyphs: *norwegian-glyphs
  - file:
      type: gfonts
      family: Noto Sans Display
      weight: 700
    id: f20b
    size: 20
    glyphs: *norwegian-glyphs
  - file:
      type: gfonts
      family: Noto Sans Display
      weight: 500
    id: f24
    size: 24
    glyphs: *norwegian-glyphs
  - file:
      type: gfonts
      family: Noto Sans Display
      weight: 700
    id: f24b
    size: 24
    glyphs: *norwegian-glyphs
  - file:
      type: gfonts
      family: Noto Sans Display
      weight: 500
    id: f32
    size: 32
    glyphs: *norwegian-glyphs
  - file:
      type: gfonts
      family: Noto Sans Display
      weight: 700
    id: f32b
    size: 32
    glyphs: *norwegian-glyphs
  - file:
      type: gfonts
      family: Noto Sans Display
      weight: 500
    id: f60
    size: 60
    glyphs: *norwegian-glyphs
  - file:
      type: gfonts
      family: Noto Sans Display
      weight: 700
    id: f60b
    size: 60
    glyphs: *norwegian-glyphs

image:
  - id: i_wifi
    file: mdi:wifi
    type: binary
    resize: 24x24
  - id: i_api
    file: mdi:home-assistant
    type: binary
    resize: 24x24

  - id: i_fridge
    file: mdi:fridge-bottom
    type: binary
    resize: 20x20
  - id: i_freezer
    file: mdi:fridge-top
    type: binary
    resize: 20x20